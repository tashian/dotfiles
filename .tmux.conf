# act like vim
setw -g mode-keys vi

# use backtick as prefix!
unbind C-b
set -g prefix `
bind ` send-prefix

# look good
# appearance
set  -g default-terminal "screen-256color"      # full colors for apps
set  -g status-left-length 45
set  -g status-left '⣿ #[underscore]#[default]:#[fg=black]#S#[default] ⡇'
set  -g status-right '#(battery-level) %Y-%m-%d %H:%M#[default]'

setw -g window-status-format ' #I #W '          # window name formatting
setw -g window-status-current-format ' #I #W '
set  -g status-bg colour3                       # dark yellow status bar
setw -g window-status-bg colour240              # dark grey window name bg
setw -g window-status-fg white
setw -g window-status-current-bg red            # red bg for active window
setw -g window-status-current-fg white
setw -g window-status-current-attr bold
setw -g window-status-attr bold
set  -g set-titles-string '[#I] #W'

# start window numbering at 1
set -g base-index 1
set -g history-limit 10000

# Enable mouse support (works in iTerm)
set -g mouse on

bind [ copy-mode

set -s escape-time 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

